<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzblog.project.tool.baseset.mapper.MusiclistMapper">

	<resultMap type="Musiclist" id="MusiclistResult">
		<result property="musicId" column="music_id" />
		<result property="basesetId" column="baseset_id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="url" column="url" />
		<result property="pic" column="pic" />
		<result property="lrc" column="lrc" />
		<result property="createBy" column="create_by" />
		<result property="createTime" column="create_time" />
		<result property="updateBy" column="update_by" />
		<result property="updateTime" column="update_time" />
		<result property="remark" column="remark" />
	</resultMap>
	<resultMap type="MusicInfo" id="MusicInfolistResult">
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="url" column="url" />
		<result property="pic" column="pic" />
		<result property="lrc" column="lrc" />
	</resultMap>

	<select id="selectMusiclistById" parameterType="Integer"
		resultMap="MusiclistResult">
		select music_id, baseset_id, title, author, url, pic,lrc,
		create_by,
		create_time, update_by, update_time, remark from
		music_musiclist
		where music_id = #{musicId}
	</select>
	<select id="selectMusiclistListByBasesetId" parameterType="Integer"
		resultMap="MusicInfolistResult">
		select title, author, url, pic,lrc
		from
		music_musiclist
		where
		baseset_id = #{basesetId}
	</select>

	<select id="selectMusiclistList" parameterType="Musiclist"
		resultMap="MusiclistResult">
		select music_id, baseset_id, title, author, url, pic,lrc, create_by,
		create_time, update_by, update_time, remark from music_musiclist
		<where>
			baseset_id = #{basesetId}
			<if test="musicId != null and musicId != ''"> and music_id = #{musicId}</if>
			<if test="basesetId != null and basesetId != ''"> and baseset_id = #{basesetId}</if>
			<if test="title != null and title != ''"> and title = #{title}</if>
			<if test="author != null and author != ''"> and author = #{author}</if>
			<if test="url != null and url != ''"> and url = #{url}</if>
			<if test="pic != null and pic != ''"> and pic = #{pic}</if>
			<if test="lrc != null and lrc != ''"> and lrc = #{lrc}</if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy}</if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime}</if>
			<if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy}</if>
			<if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime}</if>
			<if test="remark != null and remark != ''"> and remark = #{remark}</if>
			<if test="searchValue != null and searchValue != ''">
				AND (title like concat(concat('%', #{searchValue}),
				'%')
				OR author like concat(concat('%', #{searchValue}), '%'))
			</if>
		</where>
	</select>

	<insert id="insertMusiclist" parameterType="Musiclist">
		insert into music_musiclist (
		<if test="title != null and title != '' ">title, </if>
		<if test="author != null and author != '' ">author, </if>
		<if test="pic != null and pic != '' ">pic, </if>
		<if test="lrc != null and lrc != '' ">lrc, </if>
		<if test="remark != null and remark != '' ">remark,</if>
		create_by,
		create_time,
		update_time,
		baseset_id,
		url
		)values(
		<if test="title != null and title != ''">#{title}, </if>
		<if test="author != null and author != ''">#{author}, </if>
		<if test="pic != null and pic != ''">#{pic}, </if>
		<if test="lrc != null and lrc != ''">#{lrc}, </if>
		<if test="remark != null and remark != ''">#{remark},</if>
		#{createBy},
		sysdate(),
		sysdate(),
		#{basesetId},
		#{url}
		)
	</insert>

	<update id="updateMusiclist" parameterType="Musiclist">
		update music_musiclist
		<set>
			<if test="title != null and title != ''">title = #{title}, </if>
			<if test="author != null">author = #{author}, </if>
			<if test="pic != null">pic = #{pic}, </if>
			<if test="lrc != null">lrc = #{lrc}, </if>
			<if test="remark != null">remark = #{remark},</if>
			update_by = #{updateBy},
			update_time = sysdate(),
			url = #{url}
		</set>
		where music_id = #{musicId}
	</update>

	<delete id="deleteMusiclistById" parameterType="Integer">
		delete from
		music_musiclist where music_id = #{value}
	</delete>
	<delete id="deleteMusiclistByBasesetId" parameterType="Integer">
		delete
		from
		music_musiclist where baseset_id = #{basesetId}
	</delete>

	<delete id="batchDeleteMusiclist" parameterType="Integer">
		delete from music_musiclist where music_id in
		<foreach item="musicId" collection="array" open="(" separator=","
			close=")">
			#{musicId}
		</foreach>
	</delete>

	<select id="getExportJsonObjectList" parameterType="Integer"
		resultMap="MusicInfolistResult">
		select title, author, url, pic,lrc from music_musiclist where music_id
		in
		<foreach item="musicId" collection="array" open="(" separator=","
			close=")">
			#{musicId}
		</foreach>
	</select>
</mapper>