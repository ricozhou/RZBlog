<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzblog.project.blog.blogcolumn.mapper.BlogcolumnMapper">

	<resultMap type="Blogcolumn" id="BlogcolumnResult">
		<result property="blogColumnId" column="blog_column_id" />
		<result property="blogColumnName" column="blog_column_name" />
		<result property="parentId" column="parent_id" />
		<result property="orderNum" column="order_num" />
		<result property="url" column="url" />
		<result property="columnType" column="column_type" />
		<result property="visible" column="visible" />
		<result property="icon" column="icon" />
		<result property="columnMessage" column="column_message" />
		<result property="backImg" column="back_img" />
		<result property="createBy" column="create_by" />
		<result property="createTime" column="create_time" />
		<result property="updateBy" column="update_by" />
		<result property="updateTime" column="update_time" />
		<result property="remark" column="remark" />
	</resultMap>

	<select id="selectBlogcolumnById" parameterType="Integer"
		resultMap="BlogcolumnResult">
		select * from blog_blogcolumn
		where blog_column_id =
		#{blogColumnId}
	</select>

	<select id="selectAllBlogColumnNum" resultType="Integer">
		select count(*)
		from blog_blogcolumn where visible=0
	</select>

	<select id="selectBlogcolumnByUrl" parameterType="String"
		resultMap="BlogcolumnResult">
		select * from blog_blogcolumn
		where url =
		#{url}
	</select>
	<select id="selectBlogcolumnByColumn" parameterType="String"
		resultMap="BlogcolumnResult">
		select blog_column_id,blog_column_name,
		parent_id,
		order_num,
		url,
		column_type,
		visible,
		icon,
		column_message,
		create_by,
		create_time,
		update_by,
		update_time,
		remark from blog_blogcolumn
		where
		blog_column_name =
		#{blogColumnName}
	</select>
	<select id="selectBlogPcolumnByPId" parameterType="Integer"
		resultMap="BlogcolumnResult">
		select * from blog_blogcolumn
		where blog_column_id =
		#{parentId}
	</select>
	<select id="checkColumnNameUnique" parameterType="Blogcolumn"
		resultMap="BlogcolumnResult">
		select blog_column_id,blog_column_name
		from blog_blogcolumn
		where
		blog_column_name=#{blogColumnName}
	</select>
	<select id="checkUrlUnique" parameterType="Blogcolumn"
		resultMap="BlogcolumnResult">
		select blog_column_id,url
		from blog_blogcolumn where
		url=#{url}
	</select>
	<select id="selectBlogcolumnListAll" parameterType="Blogcolumn"
		resultMap="BlogcolumnResult">
		select * from blog_blogcolumn
	</select>

	<select id="selectBlogcolumnListByStatusAndTypeId"
		parameterType="Blogcolumn" resultMap="BlogcolumnResult">
		select blog_column_id,blog_column_name,
		parent_id,
		order_num,
		url,
		column_type,
		visible,
		icon,
		column_message,
		create_by,
		create_time,
		update_by,
		update_time,
		remark from blog_blogcolumn
		<where>
			<if test="blogColumnId != null and blogColumnId != ''"> and parent_id = #{blogColumnId}</if>
			and visible = #{visible} and column_type = #{columnType}
		</where>
		order by order_num
	</select>

	<select id="selectBlogCcolumnList" resultMap="BlogcolumnResult">
		select blog_column_id,blog_column_name
		from blog_blogcolumn
		<where>
			column_type = 'C'
		</where>
	</select>

	<insert id="insertBlogcolumn" parameterType="Blogcolumn">
		insert into
		blog_blogcolumn (
		blog_column_name,
		parent_id,
		order_num,
		url,
		column_type,
		visible,
		icon,
		column_message,
		back_img,
		create_by,
		create_time,
		update_by,
		update_time,
		remark
		)values(
		#{blogColumnName},
		#{parentId},
		#{orderNum},
		#{url},
		#{columnType},
		#{visible},
		#{icon},
		#{columnMessage},
		#{backImg},
		#{createBy},
		sysdate(),
		#{updateBy},
		sysdate(),
		#{remark}
		)
	</insert>

	<update id="updateBlogcolumn" parameterType="Blogcolumn">
		update blog_blogcolumn
		<set>
			blog_column_name = #{blogColumnName},
			parent_id = #{parentId},
			order_num = #{orderNum},
			url = #{url},
			column_type=#{columnType},
			visible = #{visible},
			icon = #{icon},
			column_message =
			#{columnMessage},
			back_img = #{backImg},
			update_by = #{updateBy},
			update_time = sysdate(),
			remark = #{remark}
		</set>
		where blog_column_id = #{blogColumnId}
	</update>

	<delete id="deleteBlogcolumnById" parameterType="Integer">
		delete from
		blog_blogcolumn where blog_column_id = #{value} or parent_id =
		#{value}
	</delete>

	<delete id="deleteBlogcolumnAndArticleById" parameterType="Integer">
		delete bbg,bbc from
		blog_blogcolumn bbg left join blog_blogcontent bbc
		on bbg.blog_column_name=bbc.blog_column_name where bbg.blog_column_id
		= #{blogColumnId} or
		bbg.parent_id =
		#{blogColumnId}
	</delete>
</mapper>